
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/example01_invariances_of_powerspectrum_test.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_example01_invariances_of_powerspectrum_test.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_example01_invariances_of_powerspectrum_test.py:


Example 1: Creating AniSOAP vectors from ellipsoidal frames.
============================================================
This example demonstrates:

1. How to create ellipsoidal frames

2. How to read ellipsoidal frame from xyz

3. How to convert ellipsoidal frames to AniSOAP vectors

.. GENERATED FROM PYTHON SOURCE LINES 12-40

.. code-block:: Python


    import sys
    import warnings
    import metatensor
    from itertools import product
    from ase.io import read

    import numpy as np
    from metatensor import (
        Labels,
        TensorBlock,
        TensorMap,
    )

    from scipy.spatial.transform import Rotation as R
    from tqdm.auto import tqdm
    from skmatter.preprocessing import StandardFlexibleScaler

    from anisoap.representations.radial_basis import (
        GTORadialBasis,
        MonomialBasis,
    )
    from anisoap.representations.ellipsoidal_density_projection import (
        EllipsoidalDensityProjection,
    )

    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 41-43

This is a section header -- Read Ellipsoidal Frames 
---------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 43-66

.. code-block:: Python


    ell_frames = read("ellipsoids.xyz", "0:2")
    ell_frames_translation = read("ellipsoids.xyz", "0:2")
    ell_frames_rotation = read("ellipsoids.xyz", "0:2")

    # This is to make sure the ell_frames list calls c_diameter[] rather than c_diameter and to update the diameters of ellipsoids to be 3,3, and 1.


    def update_diameters_and_variablename(frames):
        for frame in frames:
            for i in range(1, 4):
                old = f"c_diameter{i}"
                new = f"c_diameter[{i}]"
                if old in frame.arrays:
                    frame.arrays[new] = frame.arrays[old]
                frame.arrays[new] = np.ones(len(frame)) * (3.0 if i < 3 else 1.0)


    update_diameters_and_variablename(ell_frames)
    update_diameters_and_variablename(ell_frames_translation)
    update_diameters_and_variablename(ell_frames_rotation)
    print("Hello, world!")
    plt.plot(np.sin(np.linspace(0, 2*np.pi)))



.. image-sg:: /auto_examples/images/sphx_glr_example01_invariances_of_powerspectrum_test_001.png
   :alt: example01 invariances of powerspectrum test
   :srcset: /auto_examples/images/sphx_glr_example01_invariances_of_powerspectrum_test_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Hello, world!

    [<matplotlib.lines.Line2D object at 0x160822320>]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.092 seconds)


.. _sphx_glr_download_auto_examples_example01_invariances_of_powerspectrum_test.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: example01_invariances_of_powerspectrum_test.ipynb <example01_invariances_of_powerspectrum_test.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: example01_invariances_of_powerspectrum_test.py <example01_invariances_of_powerspectrum_test.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: example01_invariances_of_powerspectrum_test.zip <example01_invariances_of_powerspectrum_test.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
